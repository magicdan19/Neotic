<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from tondeuse_gazebo.xacro          | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="tondeuse">
  <static>false</static>
  <link name="base_footprint"/>
  <joint name="footprint_base_link" type="fixed">
    <origin rpy="0 0 1.570796" xyz="-0.08 -0.005 0"/>
    <child link="base_link"/>
    <parent link="base_footprint"/>
    <axis xyz="0 0 0"/>
  </joint>
  <!-- base_link -->
  <link name="base_link">
    <!-- body -->
    <collision name="collision_chassis">
      <origin rpy="0 0 1.570796" xyz="-0.08 -0.005 -0.110"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/tondeuse.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 1.570796" xyz="-0.08 -0.005 -0.110"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/tondeuse.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0 " xyz="-0.1 -0.005 0.110"/>
      <mass value="1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
      <!--xacro:box_inertia m="8.167" x="0.52" y="0.35" z="0.25" /-->
    </inertial>
  </link>
  <!-- wheel right -->
  <link name="wheel_right_link">
    <collision name="wheel_right_collision">
      <origin rpy="3.14159265 0 0" xyz=" 0 0 0"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/roue.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual name="wheel_right_visual">
      <origin rpy="3.14159265 0 0" xyz=" 0 0 0"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/roue.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="3.14159265 0 0" xyz=" 0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="3.23333333333e-05" ixy="0" ixz="0" iyy="3.23333333333e-05" iyz="0" izz="6.05e-05"/>
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="-1.570796 0 0" xyz="0 -0.195 0"/>
    <child link="wheel_right_link"/>
    <parent link="base_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!-- wheel_left_link -->
  <link name="wheel_left_link">
    <collision name="wheel_left_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/roue.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual name="wheel_left_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///catkin_ws/src/tondeuse_description/sdf/mesh/roue.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="3.23333333333e-05" ixy="0" ixz="0" iyy="3.23333333333e-05" iyz="0" izz="6.05e-05"/>
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="-1.570796 0 0" xyz="0 0.195 0"/>
    <child link="wheel_left_link"/>
    <parent link="base_link"/>
    <axis xyz="0 0 1 "/>
  </joint>
  <!-- Wheels materials color-->
  <gazebo reference="wheel_left_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Wheels diff driver-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.45</wheelSeparation>
      <wheelDiameter>0.220</wheelDiameter>
      <wheelAcceleration>3</wheelAcceleration>
      <wheelTorque>3</wheelTorque>
      <rosDebugLevel>true</rosDebugLevel>
      <broadcastTF>1</broadcastTF>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  

3
  
  <!--======================END ofPART #2 - MACROS===========================-->
  <!--=======================================================================-->
  <!--0.25 kg-->
  <!--0.25 kg-->
  <!--2 kg-->
  <gazebo reference="right_castor_wheel_link">
    <material>Gazebo/Black</material>
    <!--tags are from: http://gazebosim.org/tutorials/?tut=ros_urdf-->
    <!--These values fixed the robot from bouncing side to side:
          Problem: http://answers.gazebosim.org/question/24459/model-contact-with-ground-issue/
          solution: see: http://answers.gazebosim.org/question/3334/slip1-slip2-in-urdf/-->
    <kp>1000000.0</kp>
    <kd>10.0</kd>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <!--+++++++++++++++++++++++++++++++++++RIGHT CASTOR+++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <link name="right_castor_mount_link">
    <!--If you do not explicitly specify a <collision> element. Gazebo will 
      treat your link as "invisible" to laser scanners and collision checking-->
    <collision>
      <geometry>
        <box size="0.1145 0.1 0.0057"/>
      </geometry>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <visual>
      <geometry>
        <!--box dimensions is Meters. L X W X H where the L X H is a ractange, 
              and the H extrudes it upwards -->
        <box size="0.1145 0.1 0.0057"/>
      </geometry>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <inertial>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!--all blocks now need a 'mass' argument-->
      <mass value="0.01"/>
      <!--This is the 3x3 inertial matrix. See: https://wiki.ros.org/urdf/XML/link -->
      <!--where x=length; y=width; z=height. these lines of code came from 
        Emiliano Borghi's project-->
      <inertia ixx="8.36040833333e-06" ixy="0" ixz="0" iyy="1.09522833333e-05" iyz="0" izz="1.09522833333e-05"/>
    </inertial>
  </link>
  <joint name="base_to_right_castor_mount_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_castor_mount_link"/>
    <!-- this is the point at which the two parts attach to one another    -->
    <origin xyz="-0.40 0 0"/>
  </joint>
  <link name="right_castor_dummy_link">
    <!--If you do not explicitly specify a <collision> element. Gazebo will 
      treat your link as "invisible" to laser scanners and collision checking-->
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <visual>
      <geometry>
        <!--box dimensions is Meters. L X W X H where the L X H is a ractange, 
              and the H extrudes it upwards -->
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="orange"/>
    </visual>
    <inertial>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!--all blocks now need a 'mass' argument-->
      <mass value="0.01"/>
      <!--This is the 3x3 inertial matrix. See: https://wiki.ros.org/urdf/XML/link -->
      <!--where x=length; y=width; z=height. these lines of code came from 
        Emiliano Borghi's project-->
      <inertia ixx="6.66666666667e-07" ixy="0" ixz="0" iyy="6.66666666667e-07" iyz="0" izz="6.66666666667e-07"/>
    </inertial>
  </link>
  <joint name="right_castor_mount_to_right_castor_dummy_joint" type="continuous">
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <parent link="right_castor_mount_link"/>
    <child link="right_castor_dummy_link"/>
    <!-- this is the point at which the two parts attach to one another    -->
    <origin xyz="0.0 0.0  -0.01"/>
    <!--This introduces friction so that continious joints don't spin indefinitly
      damping is only used in Gazebo4 and earlier.... -->
    <dynamics damping="0.0" friction="0.15"/>
  </joint>
  <link name="right_castor_wheel_link">
    3
      
    <!--If you do not explicitly specify a <collision> element. Gazebo will 
      treat your link as "invisible" to laser scanners and collision checking-->
    <collision>
      <geometry>
        <cylinder length="0.03" radius="0.03"/>
      </geometry>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.03" radius="0.03"/>
      </geometry>
      <!-- roll pitch and yaw will move the item in 3D space to arrange it how
               we want it in relation to the origin. the XYZ is to move it around
             the 3D space relative to the origin. Note that 1.57075 is pi/2 -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <material name="Black"/>
    </visual>
    <!--TODO-->
    <inertial>
      <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--all blocks now need a 'mass' argument-->
      <mass value="0.01"/>
      <!--This is the 3x3 inertial matrix. See: https://wiki.ros.org/urdf/XML/link -->
      <inertia ixx="3e-06" ixy="0" ixz="0" iyy="3e-06" iyz="0" izz="4.5e-06"/>
    </inertial>
  </link>
  <joint name="right_castor_dummy_to_right_castor_wheel_joint" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="right_castor_dummy_link"/>
    <child link="right_castor_wheel_link"/>
    <!-- this is the point at which the two parts attach to one another    -->
    <origin xyz="-0.0  0 -0.07"/>
    <!--This introduces friction so that continious joints don't spin indefinitly
      damping is only used in Gazebo4 and earlier.... -->
    <dynamics damping="0.0" friction="0.15"/>
  </joint>
  <joint name="kinect_base_link_joint" type="fixed">
    <origin rpy="0 0 1.570796" xyz="0.11 0 0.09"/>
    <parent link="base_link"/>
    <child link="kinect_link"/>
  </joint>
  <link name="kinect_link">
    <visual>
      <geometry>
        <box size="0.28 0.06 0.07 "/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="kinect_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="kinect_link"/>
    <child link="kinect_depth_frame"/>
  </joint>
  <link name="kinect_depth_frame">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="depth_optical_joint" type="fixed">
    <origin rpy="0 0 0 " xyz="0 0 0"/>
    <parent link="kinect_depth_frame"/>
    <child link="kinect_depth_optical_frame"/>
  </joint>
  <link name="kinect_depth_optical_frame">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
</robot>
<!-- rosrun xacro xacro tondeuse_gazebo.xacro > tondeuse.urdf -->

